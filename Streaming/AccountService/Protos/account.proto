syntax = "proto3";

option csharp_namespace = "Account";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package account;

service AccountService {
  rpc GetAccount(GetAccountRequest) returns (GetAccountReply) {
    option (google.api.http) = {
      get: "/accounts/{user_id}"
    };
  }
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountReply) {
    option (google.api.http) = {
      post: "/accounts"
      body: "info"
    };
  }
  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountReply) {
    option (google.api.http) = {
      patch: "/accounts"
      body: "info"
    };
  }
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsReply) {
    option (google.api.http) = {
      get: "/accounts"
      additional_bindings {
        get: "/accounts/list"
      }
    };
  }
  rpc SetBanStatus(AccountBanRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/accounts/{user_id}/ban"
      body: "*"
    };
  }
}


message SetAccountInfo {
  optional bytes avatar_image = 2;
  optional bytes background_image = 3;
  optional string description = 4;
}

message AccountInfo {
  int32 user_id = 1;
  optional string avatar_public_id = 2;
  optional string background_public_id = 3;
  optional string description = 4;
  bool is_banned = 5;
}

message GetAccountRequest {
  int32 user_id = 1;
}

message GetAccountReply {
    AccountInfo info = 1;
}

message CreateAccountRequest {
  SetAccountInfo info = 1;
}

message CreateAccountReply {
  AccountInfo info = 1;
}

message UpdateAccountRequest {
  SetAccountInfo info = 1;
}

message UpdateAccountReply {
  AccountInfo info = 1;
}

message AccountBanRequest {
  int32 user_id = 1;
  bool is_banned = 2;
}

message ListAccountsRequest {
  int32 page = 1;
  int32 page_size = 2;
  optional bool is_banned_status = 3;
}

message ListAccountsReply {
  repeated AccountInfo accounts = 1;
  int32 total_count = 2;
}