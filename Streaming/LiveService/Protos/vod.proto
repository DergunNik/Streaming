syntax = "proto3";

option csharp_namespace = "VoD";

package vod;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service VideoService {
  rpc UploadVideo(UploadVideoRequest) returns (UploadVideoReply) {
    option (google.api.http) = {
      post: "/videos:upload"
      body: "*"
    };
  }
  rpc ArchiveStream(ArchiveStreamRequest) returns (ArchiveStreamReply) {
    option (google.api.http) = {
      post: "/videos/archive"
      body: "*"
    };
  }
  rpc GetVideoManifest(GetManifestRequest) returns (GetManifestReply) {
    option (google.api.http) = {
      get: "/videos/{public_id}/manifest"
      additional_bindings {
        get: "/videos/{public_id}/manifest/{type}"
      }
    };
  }
  rpc GetVideoUrl(GetUrlRequest) returns (GetUrlReply) {
    option (google.api.http) = {
      get: "/videos/{public_id}/url"
    };
  }
  rpc GetVideosOfUser(GetVideosOfUserRequest) returns (GetVideosOfUserReply) {
    option (google.api.http) = {
      get: "/videos/user/{user_id}"
    };
  }
  rpc SetReaction(SetReactionRequest) returns (SetReactionReply) {
    option (google.api.http) = {
      post: "/videos/{public_id}:setReaction"
      body: "*"
    };
  }
  rpc ListVideos(ListVideosRequest) returns (ListVideosReply) {
    option (google.api.http) = {
      get: "/videos"
    };
  }
  rpc DeleteVideo(DeleteVideoRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/videos/{public_id}"
    };
  }
}

message UploadVideoRequest {
  oneof source {
    string uri = 1;
    bytes data = 2;
  }
  string title = 4;
  string description = 5;
  repeated string tags = 6;
}

message UploadVideoReply {
  string public_id = 1;
  string secure_url = 2;
  google.protobuf.Timestamp uploaded_at = 3;
}

message ArchiveStreamRequest {
  string public_stream_id = 1;
  string title = 2;
  string description = 3;
  repeated string tags = 4;
}

message ArchiveStreamReply {
  string public_id = 1;
  string secure_url = 2;
  google.protobuf.Timestamp uploaded_at = 3;
}

message GetManifestRequest {
  string public_id = 1;
  enum ManifestType { HLS = 0; DASH = 1; }
  ManifestType type = 2;
}

message GetManifestReply {
  string manifest_url = 1;
}

message GetUrlRequest {
  string public_id = 1;
  string transformation = 2;
  string format = 3;
}

message GetUrlReply {
  string url = 1;
}

message VideoInfo {
  string public_id = 1;
  int32 likes = 2;
  int32 dislikes = 3;
}

message GetVideosOfUserRequest {
  int32 user_id = 1;
  int32 page_size  = 2;
  string page_token = 3;
}

message GetVideosOfUserReply {
  repeated VideoInfo videos = 1;
  string next_cursor = 2;
}

enum ReactionType {
  REACTION_UNSPECIFIED = 0;
  LIKE = 1;
  DISLIKE = 2;
}

message SetReactionRequest {
  ReactionType reaction = 1;
  string public_id = 3;
}

message SetReactionReply {
  VideoInfo info = 1;
}

message ListVideosRequest {
  int32 page_size = 1;
  string page_token = 2;
  string filter = 3;
}

message ListVideosReply {
  repeated VideoInfo videos = 1;
  string next_cursor = 2;
}

message DeleteVideoRequest {
  string public_id = 1;
}