// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VoDService.Data;

#nullable disable

namespace VoDService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250527160444_qwe")]
    partial class qwe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VoDService.Models.Reaction", b =>
                {
                    b.Property<string>("PublicId")
                        .HasColumnType("character varying(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsLike")
                        .HasColumnType("boolean");

                    b.Property<string>("VideoInfoPublicId")
                        .HasColumnType("character varying(255)");

                    b.HasKey("PublicId", "UserId");

                    b.HasIndex("VideoInfoPublicId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("VoDService.Models.VideoInfo", b =>
                {
                    b.Property<string>("PublicId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("DislikeCount")
                        .HasColumnType("integer");

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.HasKey("PublicId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("VoDService.Models.Reaction", b =>
                {
                    b.HasOne("VoDService.Models.VideoInfo", null)
                        .WithMany()
                        .HasForeignKey("PublicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoDService.Models.VideoInfo", null)
                        .WithMany("Reactions")
                        .HasForeignKey("VideoInfoPublicId");
                });

            modelBuilder.Entity("VoDService.Models.VideoInfo", b =>
                {
                    b.Navigation("Reactions");
                });
#pragma warning restore 612, 618
        }
    }
}
